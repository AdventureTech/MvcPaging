@using MvcPaging.Demo.Models
@model IPagedList<MvcPaging.Demo.Models.Product>
@{
    ViewBag.Title = "Browse all products (custom route name)";
}
<h2>@ViewBag.Title</h2>
<table class="grid">
    <thead>
        <tr>
            <th>Product name</th>
            <th>Category</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var product in Model)
        {
            <tr>
                <td>@product.Name</td>
                <td>@product.Category</td>
            </tr>}
    </tbody>
</table>
<div class="pager">
    @Html.Pager(Model.PageSize, Model.PageNumber, Model.TotalItemCount).Options(o => o.CustomRouteName("alternativeroutename"))
</div>

@{
    var sourceModel = new ViewSourceViewModel();
    sourceModel.RazorCode = @"
@using MvcPaging.Demo.Models
@model IPagedList<MvcPaging.Demo.Models.Product>
@{
    ViewBag.Title = ""Browse all products(custom route name)"";
}
<h2>@ViewBag.Title</h2>
<table class=""grid"">
    <thead>
        <tr>
            <th>Product name</th>
            <th>Category</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var product in Model)
        {
            <tr>
                <td>@product.Name</td>
                <td>@product.Category</td>
            </tr>}
    </tbody>
</table>
<div class=""pager"">
    @Html.Pager(Model.PageSize, Model.PageNumber, Model.TotalItemCount).Options(o => o.CustomRouteName(""alternativeroutename""))
</div>
";
    sourceModel.ControllerCode = @"
[Route(""customroutename"", Order = 1, Name = ""customroutename"")]
[Route(""alternativeroutename"", Order = 2, Name = ""alternativeroutename"")]
public ActionResult CustomRouteName(int? page)
{
    int currentPageIndex = page.HasValue ? page.Value - 1 : 0;
    return View(this.allProducts.ToPagedList(currentPageIndex, DefaultPageSize));
}
";
}

@Html.Partial("ViewSource", sourceModel)